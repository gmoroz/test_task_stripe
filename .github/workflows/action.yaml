name: Build and deploy workflow
on:
  push:
    branches:
      - master
    paths-ignore:
      - "**/README.md"
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: clone code
        uses: actions/checkout@v2
      - name: docker build web
        run: docker build -t gmoroz/stripe-app:$GITHUB_REF_NAME-$GITHUB_RUN_ID .
      - name: docker build front
        run: docker build -t gmoroz/stripe-app-front:$GITHUB_REF_NAME-$GITHUB_RUN_ID .
      - name: docker login
        run: echo ${{ secrets.DOCKER_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: docker push web
        run: docker push gmoroz/stripe-app:$GITHUB_REF_NAME-$GITHUB_RUN_ID
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    env:
      STRIPE_PUBLIC_KEY: ${{ STRIPE_PUBLIC_KEY }}
      STRIPE_SECRET_KEY: ${{ STRIPE_SECRET_KEY }}
      DOMAIN: ${{ DOMAIN }}
      POSTGRES_DB: ${{ POSTGRES_DB }}
      POSTGRES_USER: ${{ POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ POSTGRES_PASSWORD }}
      POSTGRES_SERVER: ${{ POSTGRES_SERVER }}
      DB_PORT: ${{ DB_PORT }}
      SECRET_KEY: ${{ SECRET_KEY }}
    steps:
      - name: clone code
        uses: actions/checkout@v2
      - name: render configs
        run: |
          mkdir deploy
          cat docker-compose-ci.yaml | envsubst > deploy/docker-compose.yaml
      - name: copy files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: "deploy/docker-compose.yaml"
          target: "stripe-app"
          strip_components: 1
      - name: deploy app and clean old version
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd stripe-app
            docker-compose down
            docker-compose up -d
